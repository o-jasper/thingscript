#!/bin/bash
#
#  Copyright (C) 22-05-2013 Jasper den Ouden.
#
#  This is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#

#Lays out a list of the images in javascript.

# TODO
# * More choices with 3d files, at least
#   + on gallery just picture/picture-3d-model clickthrough/right away 3d model.
#   + Wider approach? Like taking into account other options than povray?
# * Nicer if the preparing is distinct from the gallery itself.
#   Also, what about multiple galleries, all URL-adressable?

to() #Thingscript out file to keep things slightly more organized.
{   
    DIRNAME=tso
    if [ "$2" == "yes" ]; then
        mkdir -p `dirname $1`/$DIRNAME/
    fi
    echo $el | grep -xP '.+\.stl' > /dev/null
    if [ "$?" == "0" ]; then
        echo `dirname $1`/$DIRNAME/`basename $1`
    else
        echo $1
    fi
}

FIRST="true" #Array of image file names so an index can identify them.
for el in `grep -vxP "#.+" $1`; do
    if [ $FIRST == "true" ]; then
        echo '<script>
var imgs = ["'`to $el`\"
        FIRST="false"
    else
        echo ',"'`to $el`'"'
    fi
done
echo '];'

for el in `grep -xP '.+\.(stl|obj)' $1 | grep -vxP '#.+'`; do
    #Exists and is up to date.
    file=$PROJECT_DIR$el
    ofile=`to $file yes`
    if [ "$IS_TEST" == "" -a  $ofile.js -nt $file ]; then
        echo skipping: stl2js $file\; already done > /dev/stderr
    else #Note: $ofile includes $PROJECT_DIR
        echo 'designs["'`to $el`'"]=' > $ofile.js
        $ROOTLIKE/bin/stl2js $file >> $ofile.js
        echo ';' >> $ofile.js
    fi
    #TODO optional delayed loads? 
done
#Some functions to switch to images. #TODO better in a separate js file i think.
echo '</script>'

#Lays out main image.
FIRST=`head -n 1 $1`
echo '<img class="viewer" id="viewer"><br>'

I=0 #Gallery for selecting current image.
echo '<p class="gal_bar">'
for el in `grep -vxP '#.+' $1`; do
    file=$PROJECT_DIR$el
    img=$el
    echo $el | grep -xP '.+\.stl' > /dev/null
    if [ "$?" == "0" ]; then #Make image for .stl
        ofile=`to $file yes`
        if [ "$IS_TEST" == "" -a $ofile.png -nt $file ]; then #Check if up to date.
            echo skipping: stl2pov $file\; already done > /dev/stderr
        else
            echo running: stl2pov $file > /dev/stderr
            $ROOTLIKE/bin/stl2pov $file > $ofile.pov
         #Actually run povray.(thumbnail arguments)
            povray $ofile.pov `thingscript cat_get etc/pov_thumbnail_args` \
              +O$ofile.png > /dev/null
        fi
        img=`to $el`.png #Linked image.
    fi
#Not giving each a space makes it make many move into places without work from me.
    echo '<img onclick="to_img_re_url('$I')" src="'$img'" class="gal">'
    I=`expr $I + 1`
done | tr -d '\n'
echo '</p>'
# ...I want the URL to be able to indicate an selection:
echo '<script>by_url(location.href);</script>'
